/* @preserve drone-mobile / MIT License / https://github.com/Hacksore/drone-mobile */
"use strict";var e=require("events"),t=require("got"),o=require("winston"),s=require("amazon-cognito-identity-js"),n=require("aws-sdk/global");function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=i(t),c=i(n);
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
function a(e,t,o,s){return new(o||(o=Promise))((function(n,i){function r(e){try{a(s.next(e))}catch(e){i(e)}}function c(e){try{a(s.throw(e))}catch(e){i(e)}}function a(e){var t;e.done?n(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(r,c)}a((s=s.apply(e,t||[])).next())}))}const u=process.env.LOG_LEVEL||"info",{colorize:d,json:l,combine:h,timestamp:m,printf:f}=o.format,g=f((({level:e,message:t,timestamp:o})=>(["array","object"].includes(typeof t)&&(t=JSON.stringify(t,null,2)),`[${o}] ${e}: ${t}`))),p=h(m({format:"YYYY-MM-DD HH:mm:ss"}),d(),l(),g),v=o.createLogger({format:p,level:u,transports:[new o.transports.Console({})]}),w=({path:e,body:t,accessToken:o})=>a(void 0,void 0,void 0,(function*(){const s=yield r.default({url:`https://accounts.dronemobile.com${e}`,method:"POST",body:JSON.stringify(t),throwHttpErrors:!1,headers:{"content-type":"application/json;charset=UTF-8","x-drone-api":o}});return{statusCode:s.statusCode,result:JSON.parse(s.body)}}));class y extends e.EventEmitter{constructor(e){super(),this.config={username:"",password:""},this.sessionInfo={accessToken:null},v.debug("Calling constructor"),this.config=e,this.onInit()}onInit(){return a(this,void 0,void 0,(function*(){return v.debug("Calling onInit"),yield this.login(),this.emit("ready"),"done"}))}login(){return a(this,void 0,void 0,(function*(){v.debug("loggin into to API");const{username:e,password:t}=this.config,o=yield(({username:e,password:t})=>new Promise(((o,n)=>{const i=new s.AuthenticationDetails({Username:e,Password:t}),r={UserPoolId:"us-east-1_wVJW7UHWC",ClientId:"3l3gtebtua7qft45b4splbeuiu"},a=new s.CognitoUserPool(r),u={Username:e,Pool:a};new s.CognitoUser(u).authenticateUser(i,{onSuccess:function(e){c.default.config.region="us-east-1";const t=new c.default.CognitoIdentityCredentials({IdentityPoolId:"us-east-1:c8505dc2-cd6f-4247-9c66-51da20da1d28",Logins:{[`cognito-idp.us-east-1.amazonaws.com/${r.UserPoolId}`]:e.getIdToken().getJwtToken()}});t.refresh((e=>{if(e)return;const s=Object.values(t.params.Logins)[0];o(s)}))},onFailure:function(e){n(e)}})})))({username:e,password:t});return this.sessionInfo={accessToken:o},v.debug(this.sessionInfo.accessToken),""}))}vehicles(){return a(this,void 0,void 0,(function*(){v.debug("get vehicles on API");const{accessToken:e}=this.sessionInfo,t=yield r.default({url:"https://api.dronemobile.com/api/v1/vehicle?limit=100",throwHttpErrors:!1,headers:{authorization:`Bearer ${e}`}}).json();return v.debug(t.results),t.results}))}start(e){return a(this,void 0,void 0,(function*(){v.debug("Start Vehicle");const t=yield w({path:"/api/iot/send-command",body:{deviceKey:e,command:"remote_start"},accessToken:this.sessionInfo.accessToken});if(200!=t.statusCode)throw v.debug(t.result),"Something went wrong :(";return"Start was successful!"}))}stop(e){return a(this,void 0,void 0,(function*(){v.debug("Stop Vehicle");const t=yield w({path:"/api/iot/send-command",body:{deviceKey:e,command:"remote_stop"},accessToken:this.sessionInfo.accessToken});if(200!=t.statusCode)throw v.debug(t.result),"Something went wrong :(";return"Stop was successful!"}))}lock(e){return a(this,void 0,void 0,(function*(){v.debug("lock Vehicle");const t=yield w({path:"/api/iot/send-command",body:{deviceKey:e,command:"arm"},accessToken:this.sessionInfo.accessToken});if(200!=t.statusCode)throw v.debug(t.result),"Something went wrong :(";return"Lock was successful!"}))}unlock(e){return a(this,void 0,void 0,(function*(){v.debug("unlock Vehicle");const t=yield w({path:"/api/iot/send-command",body:{deviceKey:e,command:"disarm"},accessToken:this.sessionInfo.accessToken});if(200!=t.statusCode)throw v.debug(t.result),"Something went wrong :(";return"Unlock was successful!"}))}trunk(e){return a(this,void 0,void 0,(function*(){v.debug("Open Vehicle Trunk");const t=yield w({path:"/api/iot/send-command",body:{deviceKey:e,command:"trunk"},accessToken:this.sessionInfo.accessToken});if(200!=t.statusCode)throw v.debug(t.result),"Something went wrong :(";return"Open Trunk command was successful!"}))}aux1(e){return a(this,void 0,void 0,(function*(){v.debug("Aux1 action triggered");const t=yield w({path:"/api/iot/send-command",body:{deviceKey:e,command:"remote_aux1"},accessToken:this.sessionInfo.accessToken});if(200!=t.statusCode)throw v.debug(t.result),"Something went wrong :(";return"Aux1 was successful!"}))}aux2(e){return a(this,void 0,void 0,(function*(){v.debug("Aux2 action triggered");const t=yield w({path:"/api/iot/send-command",body:{deviceKey:e,command:"remote_aux2"},accessToken:this.sessionInfo.accessToken});if(200!=t.statusCode)throw v.debug(t.result),"Something went wrong :(";return"Aux2 was successful!"}))}location(e){return a(this,void 0,void 0,(function*(){v.debug("Get Vehicle Location");const t=yield w({path:"/api/iot/send-command",body:{deviceKey:e,command:"location"},accessToken:this.sessionInfo.accessToken});if(200!=t.statusCode)throw v.debug(t),"Something went wrong :(";return t.result}))}status(e){return a(this,void 0,void 0,(function*(){v.debug("Get Vehicle Status");const t=yield this.vehicles();return null==t?void 0:t.find((t=>t.device_key===e))}))}}module.exports=y;
